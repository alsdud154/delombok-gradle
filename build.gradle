plugins {
    id 'java'
    id 'maven-publish'
}

group 'org.example'
version '1.0'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    implementation 'org.projectlombok:lombok:1.18.24'
}

test {
    useJUnitPlatform()
}

publishing {
    repositories {
        maven {
            url = 'file:///tmp/my-repo'
        }
    }
    publications {
        myJava(MavenPublication) {

            groupId = 'org.example'
            artifactId = 'delombok-gradle'
            version = '1.0'

            from components.java
        }
    }
}

// delombok 적용 시작

sourceSets {
    main {
        resources.srcDir("build/src-delomboked/main/java")
    }
}

configurations.implementation.setCanBeResolved(true)
configurations.testImplementation.setCanBeResolved(true)


task sourcesJar(type: Jar, dependsOn: classes) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}


task delombok {
def srcJava = 'src'
    def srcDelomboked = 'build/src-delomboked'

    inputs.files files(srcJava)
    outputs.dir file(srcDelomboked)

    doLast {
        def collection = files(configurations.implementation)
        def sumTree = collection + fileTree(dir: 'bin')
        ant.taskdef(name: 'delombok', classname: 'lombok.delombok.ant.Tasks$Delombok', classpath: configurations.implementation.asPath)
        ant.delombok(from: srcJava, to: srcDelomboked, classpath: sumTree.asPath)
    }

    copy {
        from srcDelomboked
        into srcJava
    }

}

compileJava.dependsOn(delombok)

// delombok 적용 끝